// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

// Define a contract named SimpleBank
contract SimpleBank {
    mapping(address => uint256) private balances;

    
    event Deposit(address indexed account, uint256 amount);

   
    event Withdrawal(address indexed account, uint256 amount);

   
    function deposit() public payable {
        require(msg.value > 0, "Deposit amount must be greater than zero");

        balances[msg.sender] += msg.value;

       
        emit Deposit(msg.sender, msg.value);
    }

   
    function withdraw(uint256 amount) public {
  
        require(amount <= balances[msg.sender], "Insufficient balance");

        
        assert(amount > 0);

       
        balances[msg.sender] -= amount;

      
        payable(msg.sender).transfer(amount);

        emit Withdrawal(msg.sender, amount);
    }

    function getBalance() public view returns (uint256) {
        return balances[msg.sender];
    }

    function emergencyWithdraw() public pure {
    
    revert("Emergency withdrawals are currently not allowed");
}
}
